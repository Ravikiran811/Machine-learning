{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN/MSSvV49YtBKvgD9eSxzE",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ravikiran811/Machine-learning/blob/main/univariate_regression\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9aCG1cxQkWXj"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data=pd.read_csv('/content/Company_data.csv')"
      ],
      "metadata": {
        "id": "LVhdI1XGkjUm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "QQ137fVHko34",
        "outputId": "28b823ea-1458-48ef-f003-c0fea6a9fc29"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      TV  Radio  Newspaper  Sales\n",
              "0  230.1   37.8       69.2   22.1\n",
              "1   44.5   39.3       45.1   10.4\n",
              "2   17.2   45.9       69.3   12.0\n",
              "3  151.5   41.3       58.5   16.5\n",
              "4  180.8   10.8       58.4   17.9"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-597eb65a-fa3e-4739-856b-4198fbf0ab46\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TV</th>\n",
              "      <th>Radio</th>\n",
              "      <th>Newspaper</th>\n",
              "      <th>Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>230.1</td>\n",
              "      <td>37.8</td>\n",
              "      <td>69.2</td>\n",
              "      <td>22.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>44.5</td>\n",
              "      <td>39.3</td>\n",
              "      <td>45.1</td>\n",
              "      <td>10.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>17.2</td>\n",
              "      <td>45.9</td>\n",
              "      <td>69.3</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>151.5</td>\n",
              "      <td>41.3</td>\n",
              "      <td>58.5</td>\n",
              "      <td>16.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>180.8</td>\n",
              "      <td>10.8</td>\n",
              "      <td>58.4</td>\n",
              "      <td>17.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-597eb65a-fa3e-4739-856b-4198fbf0ab46')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-597eb65a-fa3e-4739-856b-4198fbf0ab46 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-597eb65a-fa3e-4739-856b-4198fbf0ab46');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "6sdVUAzDksFK",
        "outputId": "0e095688-6c2b-4773-dbb0-91a555691ce8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 TV     Radio  Newspaper     Sales\n",
              "TV         1.000000  0.054809   0.056648  0.901208\n",
              "Radio      0.054809  1.000000   0.354104  0.349631\n",
              "Newspaper  0.056648  0.354104   1.000000  0.157960\n",
              "Sales      0.901208  0.349631   0.157960  1.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c2585933-d121-46fe-8308-569b775f8e70\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TV</th>\n",
              "      <th>Radio</th>\n",
              "      <th>Newspaper</th>\n",
              "      <th>Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>TV</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.054809</td>\n",
              "      <td>0.056648</td>\n",
              "      <td>0.901208</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Radio</th>\n",
              "      <td>0.054809</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.354104</td>\n",
              "      <td>0.349631</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Newspaper</th>\n",
              "      <td>0.056648</td>\n",
              "      <td>0.354104</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.157960</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sales</th>\n",
              "      <td>0.901208</td>\n",
              "      <td>0.349631</td>\n",
              "      <td>0.157960</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2585933-d121-46fe-8308-569b775f8e70')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c2585933-d121-46fe-8308-569b775f8e70 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c2585933-d121-46fe-8308-569b775f8e70');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=data.drop('Sales',axis=1).values\n",
        "y=data['Sales'].values"
      ],
      "metadata": {
        "id": "hXJFBZ1vktbq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_tv=x[:,0]"
      ],
      "metadata": {
        "id": "ONQo0lNNk2rF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_tv.shape,y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "foAHH5VAlE4m",
        "outputId": "a68be421-1ce6-4b40-9425-154cc7f68f23"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((200,), (200,))"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_tv=x_tv.reshape(-1,1)\n",
        "y=y.reshape(-1,1)"
      ],
      "metadata": {
        "id": "qoIlEpJJlQTk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_tv.shape,y.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BwD1aDUJlYdt",
        "outputId": "a44ea71d-a335-401b-878c-de1ae06b52f2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((200, 1), (200, 1))"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "2MbJ0JX6lbmf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train,x_test,y_train,y_test=train_test_split(x_tv,y)"
      ],
      "metadata": {
        "id": "u0C5jAZElzSd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(x_tv,y)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "otK8cR1KmApA",
        "outputId": "737c0453-7d0b-4cf7-dd1d-8e96732c5630"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn import linear_model"
      ],
      "metadata": {
        "id": "umQXugdamIiX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "reg=linear_model.LinearRegression()"
      ],
      "metadata": {
        "id": "HBybHRcimQ2h"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "reg.fit(x_tv,y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "RESoUOCjmXkl",
        "outputId": "f06ff76f-1199-465f-bb26-2e08f91547c2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import r2_score,mean_squared_error,mean_absolute_error"
      ],
      "metadata": {
        "id": "hcPhdjLLmc_u"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#predictions on training data\n",
        "y1_pred=reg.predict(x_train)\n",
        "print(f'mae={mean_absolute_error(y_train,y1_pred)}')\n",
        "print(f'mse={mean_squared_error(y_train,y1_pred)}')\n",
        "print(f'r2={r2_score(y_train,y1_pred)}')\n",
        "print(f'rmse={np.sqrt(mean_squared_error(y_train,y1_pred))}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DjYpaRi8mti8",
        "outputId": "4d8f17b0-1a50-4b4d-f247-bda0b40ac8e8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "mae=1.8399482576149846\n",
            "mse=5.2378943153948505\n",
            "r2=0.8220185126887193\n",
            "rmse=2.288644645941097\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(x_train,y_train,c='blue')\n",
        "plt.plot(x_train,y1_pred,c='red')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "88efV46HnZvc",
        "outputId": "ccf692ed-82a4-414b-d679-c1e139d9fadb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#predictions on training data\n",
        "y2_pred=reg.predict(x_test)\n",
        "print(f'mae={mean_absolute_error(y_test,y2_pred)}')\n",
        "print(f'mse={mean_squared_error(y_test,y2_pred)}')\n",
        "print(f'r2={r2_score(y_test,y2_pred)}')\n",
        "print(f'rmse={np.sqrt(mean_squared_error(y_test,y2_pred))}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PMGTFI2hon8D",
        "outputId": "0c3dec28-57e3-4395-e8f4-0634e257515b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "mae=1.8025042839280119\n",
            "mse=5.1572926449959615\n",
            "r2=0.7717456213674356\n",
            "rmse=2.270967336840396\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(x_test,y_test,c='blue')\n",
        "plt.plot(x_test,y2_pred,c='red')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "lsH4QOkMpFvz",
        "outputId": "384460b4-828e-4516-e3f1-c878faf3c26a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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gVlLlyxZopKSEnXv3l2lpaV6++23o20aUsGypMGDw7cbIw0alPz2IClYkBFAskUdWBobGzV8+HAtWbLE8fGHH35Yjz/+uJ588klt3bpVZ555psaPH68TJ05EfM3nnntO8+fP16JFi7Rjxw4NHz5c48eP18cffxxt85As27c7V1U++YSqSgZg7hkAydapTreWZWnVqlWaPHmyJLu6UlhYqLvuukt33323JKmhoUH9+/fX8uXLdeONNzq+Tmlpqa644go98cQTkqTm5mYVFxfr+9//vu69995220Gn2ySjrwr0xSghyXnuGUYJAWhPNOfvuPZhqampUV1dncaOHRvclpeXp9LSUm3evNnxOSdPntT27dtDntOlSxeNHTs24nOQIq++6hxWTpwgrGSgTJ17BkBqxHWUUF1dnSSpf//+Idv79+8ffKy1I0eOyO/3Oz7nww8/dHxOU1OTmpqagvd9Pl9nmo2OoKoCByzICCBZPDlKqKKiQnl5ecFbcXFxqpuUvv7rv5zDit9PWIGkLxZknD7d/klYAZAIcQ0s+fn5kqTDhw+HbD98+HDwsdb69OmjrKysqJ6zYMECNTQ0BG/79++PQ+sRxrKk7343fLsxUhdPZl0AgEfF9awzePBg5efna926dcFtPp9PW7duVVlZmeNzsrOzNWLEiJDnNDc3a926dRGfk5OTo9zc3JAb4ujee52rKsZQVQEApETUfViOHz+u3bt3B+/X1NRo586d6t27twYOHKh58+bpoYce0pe+9CUNHjxYP/nJT1RYWBgcSSRJY8aM0ZQpUzRnzhxJ0vz58zVz5kxdfvnluvLKK7V48WI1Njbqlltu6fw7RHToqwIAcKGoA8u2bds0evTo4P358+dLkmbOnKnly5frnnvuUWNjo+644w7V19fr6quv1po1a9S9e/fgc/bs2aMjR44E799www36xz/+oYULF6qurk6XXnqp1qxZE9YRFwk0e7b0y1+GbyeoAABcgMUP4VxVufBC6f33k98WAEDGSNk8LPCYW2+N3FfFxWHF75eqqqQVK+yffn+qWwQASDQCS6ayLGnZstBt997r+ktAlZVSSYk0erQ0Y4b9s6TE3g4ASF9xnTgOHnDNNdLGjeHbXR5UpC+mgm/d1IMH7e3MrgoA6YsKSyaxrPCwsmSJJ8KK3y/Nnevc1MC2efO4PAQA6YoKS5L4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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "MwkmnIbRpVJE"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}